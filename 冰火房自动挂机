-- 1080P 先确认开启 scrolllock 键, 然后再按 鼠标中键开启, 关闭时按 scrolllock 既可
-- 启用鼠标左键监测事件
EnablePrimaryMouseButtonEvents(true)
-- 初始化随机种子（注意，罗技lua不支持os.time取随机数种子）
x, y = GetMousePosition()
math.randomseed(tostring(x // 2 * y):reverse())  -- 由于lua底层使用C语言的LCG随机数算法，会导致相近种子产生的结果也相近，逆序即可避免此问题

-- 生成正态分布随机数的函数（使用Box-Muller变换）
function generate_normal_random(mean, stddev)
    -- 生成两个均匀分布的随机数（0到1之间）
    local u1 = math.random()
    local u2 = math.random()
    -- 使用Box-Muller变换转换成正态分布随机数
    local z0 = math.sqrt(-2.0 * math.log(u1)) * math.cos(2.0 * math.pi * u2)
    -- 使用均值和标准差进行线性变换
    return math.floor(mean + z0 * stddev + 0.5)
end

-- 生成指定范围内满足正态分布的随机数(95.00%概率不超过n，且不小于m)
function random(m, n)
    local mean = (m + n) / 2
    local sigma = (n - m) / (2 * 1.645)  -- 1.645 0.9500 1.2815 0.9000
    local generated_random = generate_normal_random(mean, sigma)
    while (generated_random < m) do
        generated_random = math.random(m, n)
    end
    if (m == 10) then
        OutputLogMessage("%f\n", generated_random)
    end
    return generated_random
end

-- 处理事件的函数
function OnEvent(event, arg)
   x, y = GetMousePosition()
   if event == "MOUSE_BUTTON_PRESSED" and IsMouseButtonPressed(3)then
      OutputLogMessage("x = %d , y = %d!\n" , x , y)
   end
   -- 按下任意鼠标键的事件触发
   if (event == "MOUSE_BUTTON_PRESSED" and IsMouseButtonPressed(2)) then
      while(IsKeyLockOn("scrolllock") == true) do
         -- 关闭经验卡 x = 33813 , y = 56270!
         OutputLogMessage("开始执行流程!\n")
         MoveMouseTo(33813,56270)
         -- 模拟按下鼠标左键
         PressMouseButton(1)
         Sleep(random(100, 185))
         -- 松开鼠标左键
         ReleaseMouseButton(1)
         Sleep(random(100, 185))
         
         -- 关闭 升级通知 x = 33258 , y = 41614!
         OutputLogMessage("开始执行流程!\n")
         MoveMouseTo(33258,41614)
         -- 模拟按下鼠标左键
         PressMouseButton(1)
         Sleep(random(100, 185))
         -- 松开鼠标左键
         ReleaseMouseButton(1)
         Sleep(random(100, 185))
         
         MoveMouseTo(60156,48373)
         -- 模拟按下鼠标左键
         PressMouseButton(1)
         Sleep(random(100, 185))
         -- 松开鼠标左键
         ReleaseMouseButton(1)
         -- 随机延迟一定时间（10~25毫秒）
         time = random(20, 30)
         for i = 1,time do
            if(IsKeyLockOn("scrolllock") == false) then
              OutputLogMessage("流程终止!\n")
               break
            end
            OutputLogMessage("流程执行中 ... 当前sleep %d 秒 !\n" , i)
            Sleep(1 * 1000)
         end
         OutputLogMessage("流程执行结束!\n")
      end
      OutputLogMessage("脚本停止!\n")
   end
end
